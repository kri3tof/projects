- name: Setting ref variables
  set_fact:
    external_url: "https://{{ urls.ref.lb_host }}"
    external_crt: "{{ urls.ref.lb_host }}.crt"
    external_key: "{{ urls.ref.lb_host }}.key"
    gitaly_url: "{{ urls.ref.gitaly }}"
    gitaly_crt: "{{ urls.ref.gitaly }}.crt"
    db_host: "{{ pgsql.db_host_ref }}"
    db_port: "{{ pgsql.db_port }}"
    db_password: "{{ pgsql.db_password_ref }}"
    redis_url: "{{ urls.ref.redis }}"
    monitor_url: "{{ urls.ref.monitor }}"
    ldap_bind_dn: "{{ ldap.bind_dn_tst }}"
    ldap_password: "{{ ldap.password_tst }}"
    proxy_username: "{{ proxy.username_tst }}"
    proxy_password: "{{ proxy.password_tst }}"
  when: env == 'ref'

- name: Setting prd variables
  set_fact:
    external_url: "https://{{ urls.prd.lb_host }}"
    external_crt: "{{ urls.prd.lb_host }}.crt"
    external_key: "{{ urls.prd.lb_host }}.key"
    gitaly_url: "{{ urls.prd.gitaly }}"
    gitaly_crt: "{{ urls.prd.gitaly }}.crt"
    db_host: "{{ pgsql.db_host_prd }}"
    db_port: "{{ pgsql.db_port }}"
    db_password: "{{ pgsql.db_password_prd }}"
    redis_url: "{{ urls.prd.redis }}"
    monitor_url: "{{ urls.prd.monitor }}"
    ldap_bind_dn: "{{ ldap.bind_dn_prd }}"
    ldap_password: "{{ ldap.password_prd }}"
    proxy_username: "{{ proxy.username_prd }}"
    proxy_password: "{{ proxy.password_prd }}"
  when: env == 'prd'

- name: Install prerequisite packages
  yum:
    name:
      - policycoreutils-python-utils
      - openssh-server
      - perl
    state: present

- name: Enable gitlab-ee repositories
  command: subscription-manager repos --enable={{ repository_name }}

# Install exact version of the package
- name: Install gitlab-ee package
  yum:
    name: "gitlab-ee-{{ versions.gitlabee }}-ee.0.el9.x86_64"
    state: present

- name: Disable gitlab-ee repositories
  command: subscription-manager repos --disable={{ repository_name }}

- name: Backup gitlab-ee config file
  copy:
    src: /etc/gitlab/gitlab.rb
    dest: /etc/gitlab/gitlab.rb.old
    remote_src: yes

- name : Configure vm firewall
  firewalld:
    port: "{{ item }}"
    permanent: yes
    state: enabled
  loop:
    - 443/tcp
    - 8060/tcp
    - 8080/tcp
    - 8082/tcp
    - 9100/tcp
    - 9229/tcp

# TODO Allow traffic from F5 balancer IP address only on port 443

- name: Reload service firewalld
  systemd:
    name: firewalld
    state: reloaded

- name: Copy rootCA certificate for LDAP connection
  copy:
    src: files/rootCA.cer
    dest: "{{ ldap.ca_file }}"
    owner: root
    group: root
    mode: '0644'

- name: Create a directory for certificates
  file:
    path: /etc/gitlab/ssl
    state: directory
    mode: '0755'

- name: Copy server certificate for rails
  copy:
    src: "files/{{ external_crt }}"
    dest: "/etc/gitlab/ssl/{{ external_crt }}"
    owner: root
    group: root
    mode: '0644'

- name: Copy server key for rails
  copy:
    src: "files/{{ external_key }}"
    dest: "/etc/gitlab/ssl/{{ external_key }}"
    owner: root
    group: root
    mode: '0644'

- name: Create gitlab-ee config file
  template:
    src: templates/gitlab.j2
    dest: /etc/gitlab/gitlab.rb
    owner: root
    group: root
    mode: '0600'

- name: Create a directory for trusted certificates
  file:
    path: /etc/gitlab/trusted-certs
    state: directory
    mode: '0755'

- name: Copy server cert for gitaly to trusted certs
  copy:
    src: "/tmp/{{ gitaly_crt }}"
    dest: "/etc/gitlab/trusted-certs/{{ gitaly_crt }}"
    owner: root
    group: root
    mode: '0644'

- name: Ensure database migrations are only run during reconfigure and not automatically on upgrade
  file:
    path: /etc/gitlab/skip-auto-reconfigure
    state: touch
    owner: root
    group: root
    mode: '0644'

- name: Add git group to AllowGroups in sshd_config file
  lineinfile:
    path: /etc/ssh/sshd_config
    regexp: '^AllowGroups'
    line: 'AllowGroups authorized_users git'

- name: Reload service sshd
  systemd:
    name: sshd
    state: reloaded

- name: Run gitlab-ee installation
  shell: "/usr/bin/gitlab-ctl reconfigure > /var/log/gitlabee-installation.log"
  async: 2000
  poll: 0
  register: gitlab_ee_install

- name: Check if gitlab-ee installation is complete
  async_status:
    jid: "{{ gitlab_ee_install.ansible_job_id }}"
  register: job_result
  until: job_result.finished
  retries: 100
  delay: 10

- name: Verify gitlab-ee installation
  shell: /usr/bin/gitlab-ctl status
  register: gitlab_ee_status
  failed_when: gitlab_ee_status.rc != 0

# This file is copied to other nodes
- name: Fetch gitlab-ee secrets json file from first rails
  fetch:
    src: /etc/gitlab/gitlab-secrets.json
    dest: /tmp/gitlab-secrets.json
    flat: yes
  when: inventory_hostname == groups.ref_rails[0]

- name: Copy gitlab-ee secrets json file to second rails
  copy:
    src: /tmp/gitlab-secrets.json
    dest: /etc/gitlab/gitlab-secrets.json
    owner: root
    group: root
    mode: '0600'
  when: inventory_hostname == groups.ref_rails[1]
